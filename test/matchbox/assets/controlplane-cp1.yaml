version: v1alpha1
debug: false
persist: true
machine:
    type: controlplane
    token: g7r1t0.drq2g5xz8rkd2g0l
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFtMmNBRm41T2YzRnE5MmxkNUR4RU1NQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5ERXlNVE13TnpFNE5UZGFGdzB6TkRFeU1URXdOekU0TlRkYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBNFZnRVc1UDFFWEwyV0o4SmE4bVZIYTdqaTlQUk1wdWxXRDdKCm5yZXRCZldqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVNlZJTHFnVlF6WnpzK2tCNQp3MzBrSm1JMm9UOHdCUVlESzJWd0EwRUE5bUkxZkFDdUZlT25FSFM5L3JzUzg3R2pLMWlIWUxMbUhBSGVzSGorCmlXaWMvZlh4M1BjUFZIS0RuSzBZbndhMVhVaWtTSkRkVTAyMGJKVGthdWVLQUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJUEhJUXFRdkZUTlB5U0NGdXNvY3l6Slc5OUVNU1RVd3hIMDBwM2l2TFNlOQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    certSANs:
        - 192.168.86.211
        - 192.168.86.212
        - 192.168.86.213
        - api.k8s.lan
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.31.2
        defaultRuntimeSeccompProfileEnabled: true
        disableManifestsDirectory: true
        
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # extraArgs:
        #     key: value

        # extraMounts:
        #     - destination: /var/lib/example
        #       type: bind
        #       source: /var/lib/example
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # extraConfig:
        #     serverTLSBootstrap: true

        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # nodeIP:
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    network:
        hostname: cp1
        interfaces:
            - interface: eth0
              addresses:
                - 192.168.86.211/24
              routes:
                - network: 0.0.0.0/0
                  gateway: 192.168.86.1
              
              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:*
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab'
              #     driver: virtio
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:*
              #     - hardwareAddr: '*:f0:ab'
              #       driver: virtio

              # bond:
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     deviceSelectors:
              #         - busPath: 00:*
              #         - hardwareAddr: '*:f0:ab'
              #           driver: virtio
              #     mode: 802.3ad
              #     lacpRate: fast

              # bridge:
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     stp:
              #         enabled: true

              # dhcp: true

              # dhcpOptions:
              #     routeMetric: 1024

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF...
              #     listenPort: 51111
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.3
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF...
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.2:51822
              #           persistentKeepaliveInterval: 10s
              #           allowedIPs:
              #             - 192.168.1.0/24

              # # layer2 vip example
              # vip:
              #     ip: 172.16.199.55
            - interface: eth1
              addresses:
                - 10.44.5.10/24
              
              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:*
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab'
              #     driver: virtio
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:*
              #     - hardwareAddr: '*:f0:ab'
              #       driver: virtio

              # routes:
              #     - network: 0.0.0.0/0
              #       gateway: 10.5.0.1
              #     - network: 10.2.0.0/16
              #       gateway: 10.2.0.1

              # bond:
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     deviceSelectors:
              #         - busPath: 00:*
              #         - hardwareAddr: '*:f0:ab'
              #           driver: virtio
              #     mode: 802.3ad
              #     lacpRate: fast

              # bridge:
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     stp:
              #         enabled: true

              # dhcp: true

              # dhcpOptions:
              #     routeMetric: 1024

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF...
              #     listenPort: 51111
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.3
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF...
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.2:51822
              #           persistentKeepaliveInterval: 10s
              #           allowedIPs:
              #             - 192.168.1.0/24

              # # layer2 vip example
              # vip:
              #     ip: 172.16.199.55
        nameservers:
            - 192.168.86.2
            - 192.168.86.4
        
        # extraHostEntries:
        #     - ip: 192.168.1.100
        #       aliases:
        #         - example
        #         - example.domain.tld

        # kubespan:
        #     enabled: true
    install:
        disk: /dev/sda
        image: ghcr.io/siderolabs/installer:v1.8.3
        wipe: false
        
        # diskSelector:
        #     size: 4GB
        #     model: WDC*
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0

        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0
    registries: {}
    # mirrors:
    #     ghcr.io:
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # config:
    #     registry.insecure:
    #         tls:
    #             insecureSkipVerify: true
    #             
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # auth:
    #         #     username: username
    #         #     password: password

    features:
        rbac: true
        stableHostname: true
        apidCheckExtKeyUsage: true
        diskQuotaSupport: true
        kubePrism:
            enabled: true
            port: 7445
        hostDNS:
            enabled: true
            forwardKubeDNSToHost: true
        
        # kubernetesTalosAPIAccess:
        #     enabled: true
        #     allowedRoles:
        #         - os:reader
        #     allowedKubernetesNamespaces:
        #         - kube-system
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # ControlPlane definition example.
    # controlPlane:
    #     controllerManager:
    #         disabled: false
    #     scheduler:
    #         disabled: true

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb
    #       partitions:
    #         - mountpoint: /var/mnt/extra
    #           
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # MachineFiles usage example.
    # files:
    #     - content: '...'
    #       permissions: 0o666
    #       path: /tmp/file.txt
    #       op: append

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # systemDiskEncryption:
    #     ephemeral:
    #         provider: luks2
    #         keys:
    #             - nodeID: {}
    #               slot: 0
    #               
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443
    #         
    #         # cipher: aes-xts-plain64

    #         # blockSize: 4096

    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # udev:
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # logging:
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345
    #           format: json_lines

    # kernel:
    #     modules:
    #         - name: brtfs

    # seccompProfiles:
    #     - name: audit.json
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
cluster:
    id: RVdv8_hnLQEtnkwMDjAKZh4Sh44i2PhgVo15iDB06f4=
    secret: VWCQM/UqJrhC2t7ahR53McNzEtNkZkRqcoMxVwKA5FI=
    controlPlane:
        endpoint: https://api.k8s.lan:6443
    clusterName: k8s.lan
    network:
        dnsDomain: cluster.local
        podSubnets:
            - 10.244.0.0/16
        serviceSubnets:
            - 10.96.0.0/12
        
        # cni:
        #     name: custom
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: gt97i7.uo69s9d07wqq02h4
    secretboxEncryptionSecret: fh487cNH3XQ1wiz1n/Og3akpPywGcBLSXn4l+UaH+DI=
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVMrZ0F3SUJBZ0lRSFJXRFR6RmhMcHF4OVJTUkhyd1VzekFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNVEl4TXpBM01UZzFOMW9YRFRNME1USXhNVEEzTVRnMQpOMW93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSEdLTDJoK3ljTmtNWkRGMU1mZW1QVnJwUSsrMjA5dlJyRjdBZEV6TWdxMDE4Yk1qZnJXZGEvb0dIeWoKOGpkMXVmUVd6dExYMGxQai9NMmhPYVFqMUlDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVU0aXU4b2VEL3RETHNueHlHL0hGYzY0WXFyVzR3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUloQU1iZnpMU28KUHdlK3dSMXFQZ3hVTklhdkdleWMvOFpDc2xwcFl5RXRPVytYQWg5L3gvRGNxcndmNGswOTc1TVh2TWtrNDhKZgpyMmxONGxPZytWWUhtZGVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJsdEV3b3h6dEpwNlRibS9sMWxKWFc0VTlBa3llUFdvNXdEN0xRK3lvY3lvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFY1lvdmFIN0p3MlF4a01YVXg5Nlk5V3VsRDc3YlQyOUdzWHNCMFRNeUNyVFh4c3lOK3RaMQpyK2dZZktQeU4zVzU5QmJPMHRmU1UrUDh6YUU1cENQVWdBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRQW9SdWVoTW5ENUJialhyQWIwdDlJVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1USXhNekEzTVRnMU4xb1hEVE0wTVRJeE1UQTNNVGcxTjFvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCSHM2amMyY3VDejEyRElpRHdyVDBjdnpsc1RUYUViWUU1bHloRjZqay8ySnhFZ3FicUV0Ckk1YUwzQ2RDTG0yQkk1Mzl5QUh3UE10L0xMajdmbFZpcnVHallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVEb0FPZG5jYk1wNlJOY3RhR3VXNXBQM3NpMlV3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFNMUExd1Jyd2p6OFNtRThSZUN1OVhlM2tPYnlkL2Q2ajZFUTk1WWUvMENDQWlBYTlGTnpUNXVlSys4MTJPNG0KbUF1OXd0MDMydnZpcnd2NXJ2WGVUa1pOWEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU1tYkFqZHl1V3Zqc2FlRnEyb2pyejUxSlhUMGdkellwWURTT0NKVFBmZjVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZXpxTnpaeTRMUFhZTWlJUEN0UFJ5L09XeE5Ob1J0Z1RtWEtFWHFPVC9ZbkVTQ3B1b1Mwagpsb3ZjSjBJdWJZRWpuZjNJQWZBOHkzOHN1UHQrVldLdTRRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBOFVSWUdwZWdHc1FuWFBvaHZaR0xlU05LaWovTmhLcnVJUkM2YUQxRFBLTExEUXpZCjhLMDAxczZXTVBFMjFPaGFSTFhrRTFDMU82K0Q3cFNDSzNRYVZoaDRaRGVPT2RCNHNRR0dFcXp0ejdxeWhKdXIKQW5kc1dpck1qbGZjdUl1dGRKNDkzUTBWc2NDaW5ERGorY00wNDVBSDlZbVljUWtPZG9YcFVBaXkxR09sZ0ZTQQpUQmtBVlhEYzE1Mm5QN2FSZm9hYWhDN21oa2ZhcmpSdDFsTkpDRG9KeVhhT0ozNzBTV3BLMXhZenFYNUVFK2FhCmxwVWtUWWJEbE5BUnBGaTU3MWh6UTZ5TDVIaDdRbTYxUkI2ZE5raUhtMWxvWDdLTXgyL0dudE1Pb3RzWk9lTysKTUd3SGxPeHRHbXN0K2dVNnFpUW5ESjNtTU5OY0ZCaE9YOUZ5Sm1BMkkrTTdkVWpzcUtUdTA5bGxHVWh1czBYaQpHN0l1akQra01ITm8zTHprbGtsVlhLaUpJVUE1NW1UZzlaNW5zU1BqdHJDb1MvVlFibGJ2OHdHaFF3YmNGUml4Cjkxd1ZkcStQdmhpSkI5SGZaaGtBSVJ5b0daVG16dWc5M3VUQ1ppV2NPVW5FSUVzY0ZraVhveHA2aW9BaTh4US8Kb0FtUlVqNStoTlFLeFU5OUlWa0U0bGJ0a3MyWWtzOHYxaVAvNUZ6bEJGRzRSck1TN3gzWGJlMnkxVUNTdGxGcgozRjRLNGZiM3NLOWMzK2ZqUWdwK2YzNVBrZ0gvdy9TVGlaNXVPN3d2UlpaMWVJN1Y5eDRZYVBPbCszblB0V2IxCnE5dGlITmdCbE9qSVhSaC9PRDZmZ2ZUM1BXZ01QUTAzemlrVkEzaXhLbHRNTFVJUXVybWR3V3ZxRVU4Q0F3RUEKQVFLQ0FnRUEzK3VYZmE3R0tMRnUreXNuajRKNm1RWjVFeENlVlFnemxMcXExejRzbmlWVklScVFhZWZIaDZvYQoyUGUyOVNsbFJpb3VzUUtTQWdBbkNaSUpzZnpDeUs5VFpXZnVkNWdWdStwM0hmUWpqMDF1akFiU1U2cTFCSVorCmJZbjhUOGRMU0ZYcGdyUzNNczlmM0dpLzNib2Y1eWh4U3FEV3UrbzA0eW5yM1owRkpId0xTYXlqbW4wRncwYkoKb05Bd1BzRGFEajB0UVlzcDV1emZlQmt1NitGR2dmMGp3amhuUFI3bDZSRmV2bnRiblc2VURvaFRaM2lxUmMzUwp6ZFhDMmU2RE96R3pZTmJPeTFCS3plQmtHZ0h6MVVMQm9Sdjg4L3lLRGp1ZWN4L2RrS2FhcGhES0hyVFU0SklCCnZLaEc5cXBOeFVWaWZLSTcxNHNEQlo5OWRnNjB5ajNMYldJdG1uWElyb1pYc1NNVEhYNVliQitYZWpVdjcvNGUKc1FnQzFOMCtBR0VKd3o3cDduRW1qOHJLR1IzODhHQi9wV2pCMi81OUl6Qy8yMnR5NW9ranJjeSs2emNaTHh2eQpOanI4dnNXajRqT2phOEUyeFRPZnhsREpHcSs2dktFb2JNeDhKNDBmYUljcHFRdFN6eHF2Ni93NXZCc0habGNICkowSUJVS1pXendDWnNVbFJqcDlSSGdHTmV0MHMvSTNjVUV4U3dhZDRDdGdvMW5rZlEyT0xEQk5Yc2hpM0RNd2wKVFlxQWppRVdhcGhkZ3dNU0lXM1FqZWFlaFZrbGgzTndPTGg2M1dMRzZIMzh1NExRNW5sRW5UVXQzNDBGWVlRMApmSlRsbGE4bWlDNDFZSm4wbjA5TStFM0ZiM1VHNmljM1BJKyswTUtIeGNqMFZ1MkUxR0VDZ2dFQkFQTlVOQk53CnFGTlNmZ2dyMmF6TjR2ZG9iT3lKcTVuTmt1cDN6R2FUdHVDd2dzYUMzdXJJNFFtMVN4Z1hQNE9mOHVscXVtRzAKYTRIZHdIcDNoQkdGQXh3aXZ2WUQ2SWQ5cFgvWnNzRkZ5amM2NS80NDRUNWRjYk5QSlIrdGEzUHJQSlJEd0lkTAp1RXRFMkN4MmdiTDNOWjByZjNhOW1oVzkrem05Zk9GMy9oQlcrVmpOVFpVTjBhTERSV2RFV1lQSDQrZlNlOGRQCkNHMitwaERadWI0RTNBZDV0WXdqZXpnK0tSa01TNkxiZ1dSOHMwUFJ2eGQ3Y3crYmNMV09FWUQrTG5NUHdoUmMKb0pmTGZqd2NkL2o2aUFkYWsrZXp1UXVBUzZzeWViZlJ1NFRaUG9GQklIL00zMi8zcmRiOXo4L3BObkc4MUZjeQpPQXFGMXVUUjdZRFYzcDhDZ2dFQkFQM1VweTZpSEl2TDlJaU8rYjNkVjBnMUdxWW1OT3pZdkFiek5yU3dPWUsrCi9DS2Mzck5hd1JUc1loYWJ5elVIdjdoL0dONGE4OGZPK3JrRDdkQ2p6RmZiYlk5UmkyZ1JTM09LL05IVytHc1QKZ1NRaTFNczhkMWYrajJOQzBFSVA2SFpieXVwc3RLVUQ0TnlTVkZLS2pFRmkrYUI5S1NPVGovN1Ztams4azBDdQo3cWlURGpiMm9TNVdCZGRKYWFxcmViYWU2SjNLMlhwRjRKaVR1Mnp3a1REYTRmNkpNNVh4UTlQdWZtUU5WcVR6CmFqR3pKK0J0czdMVGx4RGtKT013UUtEOTAyblcyOUpmWlduT0pMQzZWaFRsU09ya25IVFhpR0dtZ2xKdFJUeWsKcVRmWG45QlV6clRJNGZxWDNJSDJEKzM4ZVBoYmRpR0VBdTkxV2FVYXYxRUNnZ0VCQUozU2NKQm5VcFh3ZkZRNgpkTTN6SUJJT1JnL0pYMmE3Z2wzWFk5am9XQVkyRml4Qk4rcWFiZk9KQmZMVEtWdnJBM2ZIeEttWWh0NU5nUWt0CnVaaFBhR3Y0VVZscHdZa1h3cDlCQ1FMNGpDYjBhd0psekJwU0sydjhtbnlJVTVoMDYrN1NYdTZoK3grK3dHTmUKWGROQktpSU4wM2VsbEdvanRlMkdiSmdrNXNHY1Y4LzBJU3piTUt4YjhRa0F1UHFUVE12UXBuM29VZlEwWXF1dApQQjcyTWV3YlVkaGFMeEtVcHIxYlR6ZUxIY3FhWXY5SzdLR0RiV2FqRUNDQnkvS1phbkV3dUZYU21rcTZMdDg0Cks4eHVXb3BDZ29vVzlKOTBFQ0F5OWVWM0FDUXpiNm9RSHM4bGg0cXMzN0VCSUtlZWdMU1dvRGNLR0hVaXgvWFQKL3pMQUJNc0NnZ0VBRkZob01oZXlYQTQwQW9JYlNIbW1WbFpUVlgvNGZBZC9RcnRaNWkrOTNGbjhrYldyTUFzVgpNTjBsbTVSUFBHZnJtUmt1NEJhZTlhUUVlckh5N09kRUtNS2d6SDBIeElhbVdwT0lZalZ0NGY5Rk9hVkZFeWs4Cms2UUcwRGo1d21IT0N6YWVWQjMwZU1tUHkzNDdIZ2FXNldMS2lXK2V6WWcxWVlLemd1VDFGSmt3N2ZnamlvcEkKTHhPY0VqNkRKcmZwNEpacUpNT3VuTnRlL2p2UktSRTdRZ1E1V3hLYVBPbUN1MGtCZm5tSE9WOTlZcEJ1b05HSwpOc280OEpTbzFFRDQzUzZiTkgrUlRSSnlhWUdwZFRUcVUzQnhZTXFFTStWV3ZDVUJpeVBSQ2VSVTMvSDdrRkpMCjR6ZTZ6VUJBMzNYZW52Kytub0dPUFc5OFlMOHlPVWFra1FLQ0FRQks0SGVhRXFCVGVlanZjT0N0d0JXQktGYzEKd2dqYWE3TkwxcUxPZmp1RkhVVlRUbE9PeHZVM0tJTDJCL1MxYzIzOHh2WHdCSk9aRjd5aVVobnR1RTBlYWlKaApUS1pkRTUzOENMMHFBUkthU09VM3lhVjhNanByNVFmUzJwa1lIRVA5R2E3TGFlOXlpQ0FHLy9NQUZQMXdmUVZLCkpHS3NsY09jSENsTnpaSjFEWmxwQ2kzb25iOURqU09xNEhtV0ZvYUlCSFRndnluRmI1T1RXeDF0blFJaStXbk4KMllrUTgwcTNLTzBDQmYrbXQwU3BaTFZ2dXY1SW9BNi9SQmRUdXVZcjFGQkhad1JOTU42czJNM0RNcVRTcVlhcwpTajYxcmphV2pYS2xRMXdxSnllcGJqMWdQTXBLd3FTdXpQSFkwMUhrMUxnSWp0SWQ4QzZTSGRPdFd6Y1YKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.31.2
        certSANs:
            - api.k8s.lan
        disablePodSecurityPolicy: true
        admissionControl:
            - name: PodSecurity
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.31.2
    proxy:
        image: registry.k8s.io/kube-proxy:v1.31.2
        
        # disabled: false
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.31.2
    discovery:
        enabled: true
        registries:
            kubernetes:
                disabled: true
            service: {}
            # endpoint: https://discovery.talos.dev/
    etcd:
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNPZ0F3SUJBZ0lRWWdwV1U4SmFleUVtTWwxL0hhVVlFVEFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTVRJeE16QTNNVGcxTjFvWERUTTBNVEl4TVRBM01UZzFOMW93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkZVNUFaejA1bklxCm5iNTlYWjMzZ1dCRlNpekN0TlBFYjl1ajRyUGV1Y1Q4dFQycTFCeTkvRUllTWxONjZ4TmFQWjNiNVo2RTZiZTkKbkJHaDI2SWY4TGlqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVOFVjdlkySm0rTlNZCkhpS05pTzREK3cwelpib3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTFBQclNPNUhVUlExUzhVOTBUTytpR0YKNVdySlkyRGxLaHZVMG53WWpIbWRBaUFETUdpWHN3WGgwQWFkcmxFKytQdmtSMlFyb1l2R2d3NkJKQ0ZqN2phTgpGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUp0U0FUTFl3T3JEdDg2dHhMMjR2STBacGpZN2hlUEFNTVFaWVV1ZWU4RzdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVlRrQm5QVG1jaXFkdm4xZG5mZUJZRVZLTE1LMDA4UnYyNlBpczk2NXhQeTFQYXJVSEwzOApRaDR5VTNyckUxbzluZHZsbm9UcHQ3MmNFYUhib2gvd3VBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # image: gcr.io/etcd-development/etcd:v3.5.16

        # advertisedSubnets:
        #     - 10.0.0.0/8
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    inlineManifests: []
    #   - name: namespace-ci
    #     contents: |-
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.3

    # externalCloudProvider:
    #     enabled: true
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # adminKubeconfig:
    #     certLifetime: 1h0m0s

    # allowSchedulingOnControlPlanes: true
