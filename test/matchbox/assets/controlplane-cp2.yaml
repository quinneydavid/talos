version: v1alpha1
debug: false
persist: true
machine:
    type: controlplane
    token: dsa2zt.zp0exvxuruzugbqr
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBZ0c1RDBvT2Z5ZGtubU5zZHdwS3puakFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXhNakV6TURjeE9UQXdXaGNOTXpReE1qRXhNRGN4T1RBd1dqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUF4U2RmeVN3N3NVNG0yRVlNN1p6VEk2U3YveUtPa09JdCttCnNaYjVKM1ZXbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkpJdStKaGwyckxFVlQ0NQo5ZVBxQUxuNmN6a0RNQVVHQXl0bGNBTkJBSEVyQzhqYkQ0MnVXY1NLMnMxZUFHcDdITzdyd2NWd01xbktlbTNvCm5ZNHdSWjROQlhPTVRUNWRXd0Y2ZUZlUXpHRVFlOUZWS2NaU2EwczNuUUFnWHdRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJSndmSGxtV256WnR4TXZINS8rcmxwZk1HVit3ODZXSlpGOFFCMVpQdmJaWgotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    certSANs:
        - 192.168.86.211
        - 192.168.86.212
        - 192.168.86.213
        - api.k8s.lan
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.31.2
        defaultRuntimeSeccompProfileEnabled: true
        disableManifestsDirectory: true
        
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # extraArgs:
        #     key: value

        # extraMounts:
        #     - destination: /var/lib/example
        #       type: bind
        #       source: /var/lib/example
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # extraConfig:
        #     serverTLSBootstrap: true

        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # nodeIP:
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    network:
        hostname: cp2
        interfaces:
            - interface: eth0
              addresses:
                - 192.168.86.212/24
              routes:
                - network: 0.0.0.0/0
                  gateway: 192.168.86.1
              
              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:*
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab'
              #     driver: virtio
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:*
              #     - hardwareAddr: '*:f0:ab'
              #       driver: virtio

              # bond:
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     deviceSelectors:
              #         - busPath: 00:*
              #         - hardwareAddr: '*:f0:ab'
              #           driver: virtio
              #     mode: 802.3ad
              #     lacpRate: fast

              # bridge:
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     stp:
              #         enabled: true

              # dhcp: true

              # dhcpOptions:
              #     routeMetric: 1024

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF...
              #     listenPort: 51111
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.3
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF...
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.2:51822
              #           persistentKeepaliveInterval: 10s
              #           allowedIPs:
              #             - 192.168.1.0/24

              # # layer2 vip example
              # vip:
              #     ip: 172.16.199.55
            - interface: eth1
              addresses:
                - 10.44.5.11/24
              
              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:*
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab'
              #     driver: virtio
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:*
              #     - hardwareAddr: '*:f0:ab'
              #       driver: virtio

              # routes:
              #     - network: 0.0.0.0/0
              #       gateway: 10.5.0.1
              #     - network: 10.2.0.0/16
              #       gateway: 10.2.0.1

              # bond:
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     deviceSelectors:
              #         - busPath: 00:*
              #         - hardwareAddr: '*:f0:ab'
              #           driver: virtio
              #     mode: 802.3ad
              #     lacpRate: fast

              # bridge:
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     stp:
              #         enabled: true

              # dhcp: true

              # dhcpOptions:
              #     routeMetric: 1024

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF...
              #     listenPort: 51111
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.3
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF...
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.2:51822
              #           persistentKeepaliveInterval: 10s
              #           allowedIPs:
              #             - 192.168.1.0/24

              # # layer2 vip example
              # vip:
              #     ip: 172.16.199.55
        nameservers:
            - 192.168.86.2
            - 192.168.86.4
        
        # extraHostEntries:
        #     - ip: 192.168.1.100
        #       aliases:
        #         - example
        #         - example.domain.tld

        # kubespan:
        #     enabled: true
    install:
        disk: /dev/sda
        image: ghcr.io/siderolabs/installer:v1.8.3
        wipe: false
        
        # diskSelector:
        #     size: 4GB
        #     model: WDC*
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0

        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0
    registries: {}
    # mirrors:
    #     ghcr.io:
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # config:
    #     registry.insecure:
    #         tls:
    #             insecureSkipVerify: true
    #             
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # auth:
    #         #     username: username
    #         #     password: password

    features:
        rbac: true
        stableHostname: true
        apidCheckExtKeyUsage: true
        diskQuotaSupport: true
        kubePrism:
            enabled: true
            port: 7445
        hostDNS:
            enabled: true
            forwardKubeDNSToHost: true
        
        # kubernetesTalosAPIAccess:
        #     enabled: true
        #     allowedRoles:
        #         - os:reader
        #     allowedKubernetesNamespaces:
        #         - kube-system
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # ControlPlane definition example.
    # controlPlane:
    #     controllerManager:
    #         disabled: false
    #     scheduler:
    #         disabled: true

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb
    #       partitions:
    #         - mountpoint: /var/mnt/extra
    #           
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # MachineFiles usage example.
    # files:
    #     - content: '...'
    #       permissions: 0o666
    #       path: /tmp/file.txt
    #       op: append

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # systemDiskEncryption:
    #     ephemeral:
    #         provider: luks2
    #         keys:
    #             - nodeID: {}
    #               slot: 0
    #               
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443
    #         
    #         # cipher: aes-xts-plain64

    #         # blockSize: 4096

    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # udev:
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # logging:
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345
    #           format: json_lines

    # kernel:
    #     modules:
    #         - name: brtfs

    # seccompProfiles:
    #     - name: audit.json
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
cluster:
    id: C7STOU40v4XOhY2kVWBrjKHYS4RoBsCXiylSqV_gUho=
    secret: XQTJySVs82dR8pf960L0fpWmYuMnjoNDoGgEdUjFExU=
    controlPlane:
        endpoint: https://api.k8s.lan:6443
    clusterName: k8s.lan
    network:
        dnsDomain: cluster.local
        podSubnets:
            - 10.244.0.0/16
        serviceSubnets:
            - 10.96.0.0/12
        
        # cni:
        #     name: custom
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: xo0m94.ndb8n9b70bxe9vps
    secretboxEncryptionSecret: MLsaXSxz7+21J1dfg48c7PkY/BNuUgktOcXDvYycFhs=
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUpGN0dmeDJFVTF1V1dab09YbHlQR2d3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREV5TVRNd056RTVNREJhRncwek5ERXlNVEV3TnpFNQpNREJhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVJDNy9Pa3hVZUZiVm8rM0VQaGlGSlVFQVU0YnhNSEFGWjRRNVBKMDhyTEVqSFpCTHZBR25vd0tqZ3oKTHp4Ynhqc2RmWCtkbkxxUlUyVjdLMStwclhVSG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGTkFWSmZSQ2txckg2dVpjKzJ2ZE1HRkRUTk9tTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUV0YnVvYTgKc1ByY2JKT2U0NTI4Z0tSR2hRMEEvbnJOY3JBR0MrR0QxdlVEQWlFQTJ0b21FUnpCT1FDUWdaQ3JRV0pVc1lWMgpiYWpCRytsa2hhbHc4Q2MwMmw0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUk4WW5qQ2hCWXRyRWxyMEdKMTdIUER0Uyt0cyt5NUFOSzArb0JFNEhVeGZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUXUvenBNVkhoVzFhUHR4RDRZaFNWQkFGT0c4VEJ3QldlRU9UeWRQS3l4SXgyUVM3d0JwNgpNQ280TXk4OFc4WTdIWDEvblp5NmtWTmxleXRmcWExMUJ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFhZ0F3SUJBZ0lSQUw0T1YxNCtvK1A4Yld6cnZkQVd1bFV3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5ERXlNVE13TnpFNU1EQmFGdzB6TkRFeU1URXdOekU1TURCYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVFkZndyMHduaXJGckNXelJuQStLOWFQSUNLekVmdThCcDdKSlFiaFhPYjRMQkRKZENkCmlsZ2dURzIzd0hHNE83UGcrWDFxdzk0cEl0V1hPMENWbFFsZ28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGRnByNk1wOXhHV1RKZHFjd2t6aUNCWjNlVThKTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDCklIcnVIVVJkU1NEbTBDeVoydTQ4R25YTGNnY0psTjhpcUkweGxPbDhrbTVyQWlBTVRvbi81dWR4Y3pDL2RQdXAKTG94RWNTSTgyNG5TS0h6Nyt5ajFTaWsyVUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVB5L2VxM1NaUnFGZ0tsY1VLb0ZJVjY4YTNKK2VWUFRib1dsNFVYVHhRWFJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSFg4SzlNSjRxeGF3bHMwWndQaXZXanlBaXN4SDd2QWFleVNVRzRWem0rQ3dReVhRbllwWQpJRXh0dDhCeHVEdXo0UGw5YXNQZUtTTFZsenRBbFpVSllBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS3dJQkFBS0NBZ0VBMDJYQkRHTk40a1ZLeE5ZNVJqUlVtQzY0dlNxaHNCYi92QXJCVkE1YnJvYnl6ZFYzCndZSlVzZ0lBRkl1WVpXeldGZGc3bXJLZjhOS2dGbDg3RUtuUXhGMHFLSHVKK1NTNS9Db1RuTjR5b0hQOWZPU1cKcnZhczZNZE5haGptbTZZSHQwMkNEZG9YOXdEV1FwYk5HVUcrZHg5NTlHK2NxZmhETEROc2NHOEkxUUh4WjROWApPdmp0Z3E4QmEvK01aa1hvZFhRTGFlb1FhZ2k4ZnVXT0RUUFNaL2RvQmU2by9EcUVYT0dCdmFrUjcyR1RtMWh6Ck94M3MvalJ5emFXRnlVK0ovQlJ0UURORDgzbmxDZm41UHlQR2o4QnFVUzlFVmxDQ2ZwcWMxVklzZUZtUHR0US8KMjFLaytPZFNJMUpLem4wMzJFSzJ3NXhGRlh3WUViQXB5TzNQQzBDNEpXYjI2OHZDa1RDejY0b2krS2FFVzFzTQp6ZzNtNCtFVkM5WWZqbGg3MUd2YVU5MW90RmRCSjJFb3BVMGxSVUlGb2tGY2NldUhDSDc2NDZuR1RSZnZ6VUUzCjZITk5XS2x4MWM2ZlJ5Y0FCdDRwcXFlcFptSGRxUHI1Mlp3V1hzUGY2QXo5aXVYYVN1MmNBZGN0NitYMEYxVFcKNkZFQ2RUSFdrZWlwYVJ3c1V1bTJpeDhFZGpBajBobkE2OHpiWC9MamZVd3lpTFIvbUZaZzRFeWY0bUlPLzMyOApnT2Q5U25RTG96Vll5aGVkODZqcC9iU29oUmJqbU5SSWxvOFh3MGdJb0FoOUt2NHJZLzgzMzZ1TGU4dG4xUUJ6CjhGbkhBdzVwUFBKR1JFMFB0WExnc3hnV1pIZEszV2tPTWltMmNlU09ya0VhR1hZK1hWZUV2Tmt3ZFprQ0F3RUEKQVFLQ0FnRUF2MUZuMVg1S0RtNEhyUHp6K01XRGlmYysyblNxd0dNUUwyN01hUFpWb3k0ZXNJcHhSNEJjaG4ybwo5TzhoalNsaTE0Sks3MGFaMmFuRm1IbTNTdTFsTTFIZHhhV0l5U0tqNzhOazNLTjd6aHNyWHN6Q1VyYU01bDc1CmdQdm9PUldhQmhydmlQbklscEw3Vm1pRVZrZFp5UldEbWVVcE0rcXJZR1ZwenBldXRwaDdrZU1jSHhNS1lTdGgKYmd4cFZHWVFhN3dLV0dDdFdrbHR6cXFTVlFDQmUvWTgvcUZ2N2xaSFZJZ0NrMU5nRi9XSFVTQkxxVVQ4SjFQdwpVbzFxOXpZMCt4N0JnVWprUm9ZYTgxeDRadHhKNSsrTVNNMHVXNitoYWxNamZTeFJjdG9iWnF2UTN2MThzSWNwCm55M3E1ZFlOcEhzOFRPd3cyYkRsVjV6SE5FR0ZEbFR3QWllQmhnV2p1NG9wSkRpUVN1Wi9pSnA0NExOQlhqZWcKbmF2eUFTVTBGOGZlVDFjYnFiZm5xMlFQSHRmVk5XMjF3SmxmUVl4VUZEbW9MbTc1SXZiVUFFTDZpZ3IzSGN4NwpiODRsZ0dtZjF0WlF2V0M1bzFzekFsN1RRSGJSRHdwNXZrYmlMZ3ZYZWtNUUhOeitTaXgvMDZQVVQ5S0xaYUhiCjNDY3Y0RXUvRzY3TmhFMXB2czFNeWJidVM1YWtBRW5HbjZIWGVOM25hbkFCSlZrNnFKcVJ3Q2hoRXlITXM0akkKYXo4MlA5UlZlcTlyM2JaQkVoNzh1alo4WU9JV3BGL2NhOWs5N2dxSzJ4Z3JKV1hoblVYMDFDZmpWY21XZjRlYQpHemlLeUI3Z3VZQmVwTFRkY1VhOU5hV1JTY1M2eS9kbjJ4N3o2RnM2OE52QnAzZmtWOEVDZ2dFQkFPU2RWM2NvCkliRmlQNnRyMFE3WGcyTUdFMzYvaFRXQmdhMkF4cnVySFVJdC9hK244V0poeGVBTFJVSEJrMkFRMmxLaGhjOWgKUGdrb3NGUG5KRTVCblZtRVZ2T29Sb2svcHdCbW9PNklNTzNLZlVPUlpONTl6eEo4TjI3c1Q4U2twSDdhSzhjTwpaeXNYR3BWcE5qczd6cnB6dEZXc2pwNHVzQlFKMGlhREI5Vnh2ZkcrMmNkeTMrUjZjN3JhY3JKVnk4MGZ3TUlXClFJa29GMEFiKzk0c3Fqd05MVGQyZlcvR05xWEVVNGhibnRQbG1kendtaFNWYVhFWTlTWnJxRzVJSytaTU9QL1kKUnlna1RuQi9Yb3pqVG5RN3dCWGZUbHkySGRGYld0cEdMaGlySHRyeHJMK25MeldzMzkyZWlKVnYwVlZTNTZWawp0Um5Yd09CUkZZRjJYUThDZ2dFQkFPeTRiem1kajdlMzh0bTRWSjhkM1U0NHJHK0hQdGszUHdNSk8zTXlTOVZkCnplbS95UlFEWit5YW9COERENHhQcm9ma291ZnZFZjdkakQrSXNwNnQrYUw1TlcxSUNCamV3L0gvc0pZK1l5aVEKbjYwUjNtWWNMR0wzUGZQUzEzMHRuRkZHNDVDVm5sRWw2b3pHdUJQOWkvWmFNbDBlcWVvN21VYXREMHo1aDFpdgp4dGFBNWc0OHFWTkc3aERDc0pyNDhoT2tOSWJWaFE1RVZzcUg3TS9TbE0xdDY3YWdYSXB1UkVMZDZSZERlWWYvCkFIdWhmWEdzTExSdjIxT1ROb0lVOTU4T2Rtak02Wm16ZjhHb3MxSWs4OGcyUWp1ZmZDaGh1VUdqdWwrb1BjMTEKSUVxZlBZSVJRd3pMUFVZU1RGTCs4UURSZTl1RjJTU0VxeVZzOVZadTB0Y0NnZ0VCQUtBdFZjRVpEekpYb2tDYgpGQ2tQK3ZDQXExd2RHRm82MlA4VndTaHdaZG1lbTZaZFJ4VWxhQnpvQ0toZjFzQnlUbVdpNGp4QTU5UkcrL1J0CmVOU1R5SW1WM2M1dVVxMkxPWmxnVHRXUitxWkJQNjc5eWV6UnZTbzRlaVp2MEJ2NU4zL2hvTmFoVXN1d0xtSU4KQzRCSkVUazJKRjM2dnhvNW9Ba0tNSUhuUUsvZU43V1BnTXJydzg4enRLNXdxL2dqZ04zQnA2N1ZKSFowN29WdQpsZlErMnkra0U5Qk9adWpQdWk0KzlrQU40YVNadEVwSEVjM21PYkNTU2dHWFlMV1VQNTNtUGZHVU9aYjRpVFR0CktQUVJ0MEJkTk9LZVNTdFFObWdmVi9LalJWem5XSUVTMzNTUTBOVU13UFZvUkU1ZndBM0dQcU4xZ2lZUE13WjQKQ1ZkaDlTVUNnZ0VCQUk5YWdjRGFjaFpJQjRGaDU1MFVjTmpWNlZjQkNFWnk5bTNZUVhCWm5TTHhVNm1pd3hxagpsV1Bybjl3bjlscDZScTkwL2xLR3JOY3pRNk9XSE5XTGRnb0Q4UjdrNkVKblpUSkFMYWhPejYzWkoxbWY0SmJsCnFOdWw3cGFoc0czV0dUdi9PZ0J0R3hyNVl6a3RmbnhjcDAzaEFXN3pDdU1XaEpRUWFadXI0Uk1NSDlYMjZWcmwKMFlUbEIzYU84SFJwSGZCWEdKZ3U1Z3pseGNtUTF4Qmo3a2tac0ExQXY4bjFUTkZSb2I2ODFmUk5zUFV0cnRJUAorbUtxK3A5Nkh5QlhvajFvZkx5cW15ekJUelR2L09oYUNHZk9zLzEzYjdEa3ZWUEsyeXJpcjhxa2k1R2xMWkorCjhhUGwwSTJHdDBIcnNmZFU1VFRqc2NRenM1Rk9rcVJ0S0xFQ2dnRUJBTnJIeC9LYm5EbUxCVmQ0aldyQkhjS1MKQU1UVzFzekJCbUo5WUpFUElyY0hkRThwV1h6MkpCM0JKTmt2RXg2dnptRUlTbkxJQ3pPTEhqbHJHZjJVNzRKNAp5TVkvL3NYV0ZsN0FRWGEwVlk1UjM2cDBISWJmN2JQUDlEVFhaOUR0RUFLSjBkTUNsdjViZlFBVXJDbGhuWGNjClR2OXI0NUZlcEJpeCtuTTRyeklyTHpseEViWTBUKzFIY0sveHE5R3JKQkNtcWlMRlJ5anZXQWtKZXdtWGZkYm4KRTg5RHlqUjdESEYzYXFNY25oTUVxREtwTnFrV3lyT3BZMXNwSUg2bmFjbmlHNDd5RGFweGU2dEIxVjBDNTBQbgpmZE9VdkM3d0hSNXZ5NnJsckRaSXFBKzR5VjN3cEVCQjdxM3ZRazZ0RlRza244R2p1anJ4YmM2R3NuaHIzdE09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.31.2
        certSANs:
            - api.k8s.lan
        disablePodSecurityPolicy: true
        admissionControl:
            - name: PodSecurity
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.31.2
    proxy:
        image: registry.k8s.io/kube-proxy:v1.31.2
        
        # disabled: false
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.31.2
    discovery:
        enabled: true
        registries:
            kubernetes:
                disabled: true
            service: {}
            # endpoint: https://discovery.talos.dev/
    etcd:
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNPZ0F3SUJBZ0lRQ3kvaEp1NGdlZHNCS3NtZS9vTUZzREFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTVRJeE16QTNNVGt3TUZvWERUTTBNVEl4TVRBM01Ua3dNRm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkc2Z3YreGVkVTZnCjhndDdmZmtrNGVseUJJdkpiMzNBZDRoNGx2dW0vS0w5TS91dGpFM1FOOHZYYlVES09xcFkrdmJKUEE3cVQ4YTcKV1dHUUp6VnhNL3VqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVaFB5T0Y4MkRIUDQ2ClkwaHlEVlhnWE5qUStFOHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTjdhVlNUMkFrbE51ZkFReWo2MDdSaGkKVWFKU0NRY3lLcVVqNEpGZjRsVE9BaUFDdHU2TWZiZDNzRHRWVDJySHFnTXlvZzBWR2E4ZnpQYlhGZTRFTjFoagpDZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtiRC85cGtTcnBPcXFSTHg5U2MzQlhqQnpkdnpReVE5NWF0WCttcXEwOGpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFYnFDLzdGNTFUcUR5QzN0OStTVGg2WElFaThsdmZjQjNpSGlXKzZiOG92MHorNjJNVGRBMwp5OWR0UU1vNnFsajY5c2s4RHVwUHhydFpZWkFuTlhFeit3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # image: gcr.io/etcd-development/etcd:v3.5.16

        # advertisedSubnets:
        #     - 10.0.0.0/8
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    inlineManifests: []
    #   - name: namespace-ci
    #     contents: |-
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.3

    # externalCloudProvider:
    #     enabled: true
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # adminKubeconfig:
    #     certLifetime: 1h0m0s

    # allowSchedulingOnControlPlanes: true
