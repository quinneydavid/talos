version: v1alpha1
debug: false
persist: true
machine:
    type: controlplane
    token: 3464kt.lc4agf1pnhq7f7n7
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBZ1o4bjc2K2Z3VS9HcjlXL1liZDI1ekFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXhNakV6TURjeE9UQTNXaGNOTXpReE1qRXhNRGN4T1RBM1dqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUh4S3hJLzE5VnhHdk94dnJPYWcxL0ljVVlzUnhaeW1oR1pVCmljQ2RteUovbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRktWYzI2ajBDQmZ5QTU3dgphWXRHNExwRnVVTXNNQVVHQXl0bGNBTkJBTHJyZHhtYkYxMGJNLzVldHlIZU5IZE1yMFdaVFpuU0NRVzhOVDBzCndDTnlIazBodTkwNEErSlQ5Sm5BaExVWExoaVhXWm9rUXhoSGkxRmhGbUEvMGc4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJUEZwME1oQ3NaUHBFUHQ1cFZ3UUIyY1ExTmY3R0FvQmJHZlhhMEZieExpTAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    certSANs:
        - 192.168.86.211
        - 192.168.86.212
        - 192.168.86.213
        - api.k8s.lan
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.31.2
        defaultRuntimeSeccompProfileEnabled: true
        disableManifestsDirectory: true
        
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # extraArgs:
        #     key: value

        # extraMounts:
        #     - destination: /var/lib/example
        #       type: bind
        #       source: /var/lib/example
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # extraConfig:
        #     serverTLSBootstrap: true

        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # nodeIP:
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    network:
        hostname: cp3
        interfaces:
            - interface: eth0
              addresses:
                - 192.168.86.213/24
              routes:
                - network: 0.0.0.0/0
                  gateway: 192.168.86.1
              
              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:*
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab'
              #     driver: virtio
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:*
              #     - hardwareAddr: '*:f0:ab'
              #       driver: virtio

              # bond:
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     deviceSelectors:
              #         - busPath: 00:*
              #         - hardwareAddr: '*:f0:ab'
              #           driver: virtio
              #     mode: 802.3ad
              #     lacpRate: fast

              # bridge:
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     stp:
              #         enabled: true

              # dhcp: true

              # dhcpOptions:
              #     routeMetric: 1024

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF...
              #     listenPort: 51111
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.3
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF...
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.2:51822
              #           persistentKeepaliveInterval: 10s
              #           allowedIPs:
              #             - 192.168.1.0/24

              # # layer2 vip example
              # vip:
              #     ip: 172.16.199.55
            - interface: eth1
              addresses:
                - 10.44.5.12/24
              
              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:*
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab'
              #     driver: virtio
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:*
              #     - hardwareAddr: '*:f0:ab'
              #       driver: virtio

              # routes:
              #     - network: 0.0.0.0/0
              #       gateway: 10.5.0.1
              #     - network: 10.2.0.0/16
              #       gateway: 10.2.0.1

              # bond:
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     deviceSelectors:
              #         - busPath: 00:*
              #         - hardwareAddr: '*:f0:ab'
              #           driver: virtio
              #     mode: 802.3ad
              #     lacpRate: fast

              # bridge:
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     stp:
              #         enabled: true

              # dhcp: true

              # dhcpOptions:
              #     routeMetric: 1024

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF...
              #     listenPort: 51111
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.3
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF...
              #     peers:
              #         - publicKey: ABCDEF...
              #           endpoint: 192.168.1.2:51822
              #           persistentKeepaliveInterval: 10s
              #           allowedIPs:
              #             - 192.168.1.0/24

              # # layer2 vip example
              # vip:
              #     ip: 172.16.199.55
        nameservers:
            - 192.168.86.2
            - 192.168.86.4
        
        # extraHostEntries:
        #     - ip: 192.168.1.100
        #       aliases:
        #         - example
        #         - example.domain.tld

        # kubespan:
        #     enabled: true
    install:
        disk: /dev/sda
        image: ghcr.io/siderolabs/installer:v1.8.3
        wipe: false
        
        # diskSelector:
        #     size: 4GB
        #     model: WDC*
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0

        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0
    registries: {}
    # mirrors:
    #     ghcr.io:
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # config:
    #     registry.insecure:
    #         tls:
    #             insecureSkipVerify: true
    #             
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # auth:
    #         #     username: username
    #         #     password: password

    features:
        rbac: true
        stableHostname: true
        apidCheckExtKeyUsage: true
        diskQuotaSupport: true
        kubePrism:
            enabled: true
            port: 7445
        hostDNS:
            enabled: true
            forwardKubeDNSToHost: true
        
        # kubernetesTalosAPIAccess:
        #     enabled: true
        #     allowedRoles:
        #         - os:reader
        #     allowedKubernetesNamespaces:
        #         - kube-system
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # ControlPlane definition example.
    # controlPlane:
    #     controllerManager:
    #         disabled: false
    #     scheduler:
    #         disabled: true

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb
    #       partitions:
    #         - mountpoint: /var/mnt/extra
    #           
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # MachineFiles usage example.
    # files:
    #     - content: '...'
    #       permissions: 0o666
    #       path: /tmp/file.txt
    #       op: append

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # systemDiskEncryption:
    #     ephemeral:
    #         provider: luks2
    #         keys:
    #             - nodeID: {}
    #               slot: 0
    #               
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443
    #         
    #         # cipher: aes-xts-plain64

    #         # blockSize: 4096

    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # udev:
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # logging:
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345
    #           format: json_lines

    # kernel:
    #     modules:
    #         - name: brtfs

    # seccompProfiles:
    #     - name: audit.json
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
cluster:
    id: IgKVi4Y6bCyMHyEWbqj_EcYGhVbhLIQkeRVJFDkzXrs=
    secret: P++o5tWQrXqAsH4MI8emEVDd5GBGlroOH1mNISjjGjM=
    controlPlane:
        endpoint: https://api.k8s.lan:6443
    clusterName: k8s.lan
    network:
        dnsDomain: cluster.local
        podSubnets:
            - 10.244.0.0/16
        serviceSubnets:
            - 10.96.0.0/12
        
        # cni:
        #     name: custom
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: qlo2p9.diahaeq02pfv0oo6
    secretboxEncryptionSecret: SQzt9eCHthFeyWCs2ygtm7JRUP8kMJsMTlF5xDOgIA0=
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRTWxZRnMwc1RiYkRsRUJyY05iZ29rekFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNVEl4TXpBM01Ua3dOMW9YRFRNME1USXhNVEEzTVRrdwpOMW93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCR1puZnVMK0dSK2EvTW1KWE83MTB1NG5yZENSekROUmdHWjdHak1pS3IzK0NTdCtCVGhGQXRsQmZoUWgKa3p2Nk5hVk55U3U3RVB4Q2ZORTlzWkRFUkhpallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVja0RkWW5wRFl0ZzZ4M1RObDZWMmJadlJBaWN3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUk4RkVLazgKT3psOW5rYlhDODRZeGFZaklhOGJ0eFVoSFVrNmlaMndUaUxFQWlCWUU1ZHdNdktORG9UWlhmeTZBb1V1RlFoQQpKSkp2NkdsaUdOcTl0ZnRLTkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUx3VGc3NFRHTDNYVU4yWDBIWmtVcGptTkRpRUNpL3ZNNnBDNHFieExvZU1vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWm1kKzR2NFpINXI4eVlsYzd2WFM3aWV0MEpITU0xR0FabnNhTXlJcXZmNEpLMzRGT0VVQwoyVUYrRkNHVE8vbzFwVTNKSzdzUS9FSjgwVDJ4a01SRWVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU9VbDJlc1JobWNjVlFVTzc0MWdZQUF3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5ERXlNVE13TnpFNU1EZGFGdzB6TkRFeU1URXdOekU1TURkYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVE3Ky91NUJEd3AzdmN2N2tmNkhjdVpUNGFSVXlqTWpzbys2M3dIMVlNWHZhdTJUWWFUClNia1ljd0xCSFpxR1AvVVhKOUVLZ2xndytzMkxtVjlBbEtuNm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGTkdnaVNISUU5RDZLV2V5bTFCOXo1cFgwSU8zTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRHhaOThabVd1VlNncTFxa1FSVDRiU29rRXF6VzY0QkJLU0VER3Z4bEhZcHdJZ0gzS0V3RHdmMXduNHpjM3cKZ2dOTkQ3enlLUU5mWXBmMG9QN2lsZUczOGtnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVxbDZVUFhuNjdtRjVYUElZMjdJOFhIU0ZTNTlqVGVUWW02R1l5RUtDR2dvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTy92N3VRUThLZDczTCs1SCtoM0xtVStHa1ZNb3pJN0tQdXQ4QjlXREY3MnJ0azJHazBtNQpHSE1Dd1IyYWhqLzFGeWZSQ29KWU1Qck5pNWxmUUpTcCtnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBNWtnM3QySTVPTGFxdVdMc1BWZ0lQN2IxUXpPVU8zVnNTWkZ4ZG8xMThqUlVMOTF6CjZBN3FXcFU2YmxkNjRPdzhQZ1JEVTNoMWFvNFNiUEVKMWtqSzl2OHo3VnU4VUh4dHdZQ1V5ZXJFQ3UvR1E2bEUKWEEvRUg2cTBCS3hnZjBCMnBZdVl0RkJLK01wekt0M3pFN2FpZDI3TDZKUDNTQjJLR3EvdGhWbjdKU09BMDlzMgo4OEd2RUlhdzZNaGNONWpOR3VDRU9ISVNUaWFaeFowak9hbmdIMFR6WDZFbVRxMnh1Z2kxdTdOM2lEVlgzQWtaCm1UNmtXY1NmQ0pjUGpnTDlnWGI2UHlQYmNPeU0va3ZqQkswR1lXUjJWVDFYRkw1Z2x3ZE1iZ0ZvbDk5bk1zM1EKR3lJREJLRzNvNzRNdE10cTNnb3M1eFF6SDBGa1R5dlVlU0oyS0pyNTV5WGtteFFGZkJBaytHT2Zpa3F2dnA0MgpxWHhHdldST2l0RjdVNUQ2SDM3RkFPRko4MUpPSndZbGRmMk02N0ZZNUNMdnBsRDd4MlB3QXZvMmo1T3JkOWZtClppa3RUMnBITklRYlFOdkozMVBQSzlVUTlDRjkwN0tvaGZPai8xbnkzcVlwcUR4R1duby9WeVErcnd0NERyMVAKa0I1aGZzQTN6eUxEQWdoQXl3N3VScGtXNWRCM3NIVWlDcDZLaWw4a21MTk9DV1VUU21EZEUxOVBoTHZZNld6NwppSEVTU3RZZit4dkhoRmhqeDhnU1haUVZlVjhDL1cvcGpmNjR3VlBtcHA2OE1mMUtRWjBSeG91WmE5bWZZenN5CnljcDJ2NUkwY1NrVm5udUpUQkJjdG9CNHNMYUZ1Njc4UmNsTHU5YlZnTDc4NVh6T1poWTVsaGxNc0NjQ0F3RUEKQVFLQ0FnRUF0M21pcXNIZnhZZ0V6bUE2eVVWeWpSRkFxS0pYNEdmV04yZGlkNHFPQnNRYXIyaEtDUUtaUmtMUApvMHFmNU1WVDJqV2JUczRTL3lyakUxbVk5TnBhbkNFSlJueG90ZGZ0dXRhdnRaRVBVWWRvK0UvTTMyelFYa3FyCjAyMWtGUDlQaU9hSWJHSHMyZnl6ZGR3UTZBd0R0aFRZOGgyeVVBcjVGZnBGekpHOHdBSmhpbXFHaGdBemMzOWQKUkpzZW5rMW9YWm0wdnlSajRWQndCRHNHN2RLamQwYUFnaGpyWkpTUG5pR0NhbUs3UWhMK1Jab2FnemFkeThnVQp6Y3RONFdBUWl5NDRoRVlWZVF0LzZyeWJ6QVh2cDNsYnJ0NkltMFp6dnVGWnkrdmpZZDNsWTEwSUNoWTNRV0YzCjUwWnM2VCtKamcrZFp4OTQrOVltRGM1bUkzMkpsWjFPZ3ZTK215R1I4aS8rUE9VdFlVY3VPeVVmU014NHRWL2QKM3doQ1FtYmg0SFloTkZ6eHpENjQ2bklxcUVFMDBGQTYzT2pBWnJiTXJmekIxWU5OVGZCQ3NrSEFOaXhSVXJMRgo0VC9YcXViSm9MYWgyMVEzT2N6K3JWZi9FYnI2ZkhWRERhWGVUSHZRbHVMWGJLUjA5MlFBR3JmNW55UVdlUW1XCkE5bWI3NDRJMnJ5S1puZ3FsWmVzT2xpbFIySTh3WTRxY2hvWk9mdzFxWGQrM3BPZW5meWFxRDdLK3VOYk1lY2EKbnZqakgyRk5vcVE0M3lNeWxNY3BZc3NtY2U2Znd6VUNyejV4VGoyaW43M1dCYXF1Mk5SS285YVdFWkdadUhiNgpSOFhXdmxzcGpTN1pGN2JFNVh5d2RndUN1c21YNXdqSmRIYko4OWEwRXBXbWRFQXlpZ0VDZ2dFQkFQNk5CMmlCCmNuNU56cWoxR1dhaE5WSjJCVWJpcmFOenR6NnlFdC9WZ2dDOTlKcTNCR0NwS2FiQWs0N2NQbzdMUys3VnZNclYKTS83UEtnNDRLYm5yVTJ1VUk1TXFZNTMzVk9leGNxalAwQWtwUHlEa3BMcXFCd1k4OVV0NCtXUTNxK1l5bFVaVApVZTc3aGFnSU5qWW1YaTJoNHZvWWpiZTJwUnZvcXo5VXlpK1RML202WGprLzBvQlE3bU11RUgvNGhjQmdBNnNaCll2VUprcGs2c1h5NTJXU1lPaU9zTUF0cWlkQndrTXQrVmEvK3ByK1BGa0tkeFJCb1htd3dpQzBOaU9qMldBV0YKejF2TkNtOExHb25TdnBGWnhCQnZXY2pyV2tXdm9yS2RNWXdLYi9QamNKa3BtUEloaG1VWjREc1BrY2dYRmc3RAp5NTBVelgwRlRPL0FjRWNDZ2dFQkFPZVgwZ2tUMmxZeFV4cndIS0RGcWdUbGdPeUQ5a3hkTVdmWE9tQUM0TzdICkRnWU5PcGwyNUtid1ZKNGhNdE1qbDZmSmFlekVSM1NpTFlHNXpIQ1AzZXMzU0ZMRGdHeFlpYVl5Q1RaSTFyQm4KWjEySm1mQmlFb3JnUVJkakhmdjMxeDdndFd6MUNVS1pZUStsRWMrSWpLekYwbUE4dlhYbHFGY0NBUEdYTXZrbQoxaFhFRW1oT2prTVU1djQ1OHNtT2dqdWlrMXpLWU9qLzJHMGI1bzlVcTh1eTM5LzczNUF1Vmtub3BqQWRJbzVKCnU2TFZQRWJvbGFDTUQzRGU0czcwU0FzMWVTWUVBR3pGVzJzYTdxNHNLbGhMNzVERkMzdUNBdmQ1QWNPZ2MwZTAKb1kwZ2UzRWNnK1RDWjc5WmUydU13d1RSZmZIdFdlRnBkYmpQMUdmcWtTRUNnZ0VCQU5zVzJUUjZqZWZsNGlTTAo2SlByMXJBbHduN3paVTRVcjdoM25rVW5TQ0NKWGptM29qM3IrMXg1emNjZEMzN3R2V3BRYnBFSmxob1BobnY4Cm5QVlhkVkpYaTVNRDNmKzlQRWU2OUJ3VjJWRzVQWXQ3SDhsRnhJdjY5WWxERXl2TnV0ZUQyL1ZPaTJ1czhxbmcKZjRCMTM0TlpIYm55WGkrc05VbmpKVmw2Q2hlT2tMRlpWZlhpVjdSM2MrYkxaQW94QmpYQXJnZWE3eEJHYi9ZUQpqV2p6c1FlaStnOXdDVjRhRVlubENNc003b1Z2SVdnb3FKa25uOUJ5ZENxY1R1aXdDSkd5VGFwYk5GRW9GbjNpCnliR3NRTGRyMHBQdXN4RjZlQlVZaVdsQVlML096L0xUWkR0L2tSTitCV1dKTXZUQ2Z0QUFCczBvZWx5MTVmTmcKRjRzWFQ4c0NnZ0VCQU05UC9ucVZ4UHNuU0VkeTdZMlZvKzZpSzFpTmdHczNlVVNGVEFJcVVZUXR1QVgrelpnVwo3L1BvYXpicWJQN0llN2Q4KzA4eEhPM3hSMTg3SFNFZUIvL0pDdnJiZXhpQjRTWmU0QlF4KzgwSm8yUCtDMGs5CjRXOWo4NkNsMzI5d21xZFBhOWpQT0t6ZmRCMTNISXgwcGNqN2hLa1ZkbHdWYXk0SDR5Umd2d1o5bDJNQWs2Ry8Kd0dXWVRuY0JGSzhNM05QWllxVExuUmkxL2QwZC9yUUxqWVhZNThNdlN4OWIrMjVKem9wL2FqR0pHMmhXRFpGRQpIcjBLNDcrY0pkZ3dvRlU0VnV5SzVINTU1SzNwL0FMNkVpWGNRK1dLSGc4L2dMeGJIQk1zakVXQ0VxT3NraFBjCi9NeElvbXFPQllkdkNCeEdFOEgvUUZnaCtYbW93WEVNYjBFQ2dnRUFkZHBHczErNzFoWHdwU1RmT2taYVB4TU4KU29JTmJpaXhWZ1FwNGFRbHBLU3M5ZTNTSHk2Rk5WblAvb1pyeHZIdUFDRkYyRVhYUGY4UnMrSlA1b25LWnpqNApXL3grV0NiRXlJSk5yN09zNlVXY1c1UGo3M1VhNVAwOTdVckZKY1p2WXZ4MkV4ZHpBbDBzUzlJcUtzcVpqLzQwCi90ODhVMXJKREI0SWc2dEgvVnZxTnpwZWh1a3QxbEdaOTZJcG1nRTZ4cUNSby90MDRCY0RGa0xKM0Fvejh5SEwKUU9jbGNxOHBPeGVVeUgvc0k5MW5SQ01aVlNhczRyNW12eFpKVkRCRVBPQXMrRHA1VXpnREJuYmdubHkyN1VmTwpZUkdZTFhocjBUTFNxVFM3am4wRlgwZnVFWXo0S1lYOU5OOHBYYVVtSVNodTNWa3VvSUhCNTNnMDh1eWd4UT09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.31.2
        certSANs:
            - api.k8s.lan
        disablePodSecurityPolicy: true
        admissionControl:
            - name: PodSecurity
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.31.2
    proxy:
        image: registry.k8s.io/kube-proxy:v1.31.2
        
        # disabled: false
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.31.2
    discovery:
        enabled: true
        registries:
            kubernetes:
                disabled: true
            service: {}
            # endpoint: https://discovery.talos.dev/
    etcd:
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUk4Tk9PTHBoVHRUTU5yQUdiVExZdzB3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRFeU1UTXdOekU1TURkYUZ3MHpOREV5TVRFd056RTVNRGRhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTUnJ0d0NsWnpmCitrUlloN1duQ2plV3pnOVFLVndGbzRlcTAxWldtVDJmamhSYTc5WUlXK2JZc0NORlh4WVFDeUdBSy9iNFpaMXUKQWxiTWZjWVNIVzVXbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk00Zi9rWDA3ZG9YCllqYzgxZlJIZHIzcDZTYUxNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRUhtU2FSeGFjNzN1S2IwelcxTktoSTQKNmsrZkp1WXQxbXNSWnNySHVsNDdBaUVBOHJ5cU1DcWQvbS82STRaakZwNUp1T2tFTXNqRWNVenVwS2tCYnRVMApscHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhLNm12V0ozaW40dXhNWlhEcTJIcjAwVFJZMS9GRWFWRys4RGlSUVhKKzdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFa2E3Y0FwV2MzL3BFV0llMXB3bzNsczRQVUNsY0JhT0hxdE5XVnBrOW40NFVXdS9XQ0Z2bQoyTEFqUlY4V0VBc2hnQ3YyK0dXZGJnSld6SDNHRWgxdVZnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # image: gcr.io/etcd-development/etcd:v3.5.16

        # advertisedSubnets:
        #     - 10.0.0.0/8
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    inlineManifests: []
    #   - name: namespace-ci
    #     contents: |-
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.3

    # externalCloudProvider:
    #     enabled: true
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # adminKubeconfig:
    #     certLifetime: 1h0m0s

    # allowSchedulingOnControlPlanes: true
