FROM alpine:latest as fetcher

RUN apk add --no-cache curl jq

WORKDIR /downloads

# Fetch latest version dynamically
RUN set -e && \
    echo "Fetching latest Talos version..." && \
    TALOS_VERSION=$(curl -s https://api.github.com/repos/siderolabs/talos/releases/latest | jq -r .tag_name) && \
    if [ -z "$TALOS_VERSION" ]; then \
        echo "Failed to get latest version" && exit 1; \
    fi && \
    echo "Latest version: ${TALOS_VERSION}" && \
    echo "Downloading vmlinuz..." && \
    curl -fSL --progress-bar -H "Accept: application/octet-stream" -o vmlinuz "https://github.com/siderolabs/talos/releases/download/${TALOS_VERSION}/vmlinuz-amd64" && \
    echo "Downloading initramfs.xz..." && \
    curl -fSL --progress-bar -H "Accept: application/octet-stream" -o initramfs.xz "https://github.com/siderolabs/talos/releases/download/${TALOS_VERSION}/initramfs-amd64.xz" && \
    echo "${TALOS_VERSION}" > version.txt

FROM quay.io/poseidon/matchbox:latest

RUN apk add --no-cache curl jq gettext ca-certificates && \
    curl -fSL -o /bin/vault.zip https://releases.hashicorp.com/vault/1.15.2/vault_1.15.2_linux_amd64.zip && \
    unzip /bin/vault.zip -d /bin && \
    rm /bin/vault.zip && \
    chmod +x /bin/vault

RUN mkdir -p /var/lib/matchbox/assets \
    /var/lib/matchbox/profiles \
    /var/lib/matchbox/groups

COPY --from=fetcher /downloads/vmlinuz /var/lib/matchbox/assets/vmlinuz
COPY --from=fetcher /downloads/initramfs.xz /var/lib/matchbox/assets/initramfs.xz
COPY --from=fetcher /downloads/version.txt /var/lib/matchbox/assets/version.txt

RUN echo '#!/bin/sh' > /entrypoint.sh && \
    echo 'set -e' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Verify required environment variables' >> /entrypoint.sh && \
    echo 'if [ -z "$VAULT_ADDR" ] || [ -z "$VAULT_TOKEN" ] || [ -z "$GITHUB_REPO" ]; then' >> /entrypoint.sh && \
    echo '  echo "VAULT_ADDR, VAULT_TOKEN, and GITHUB_REPO environment variables must be set"' >> /entrypoint.sh && \
    echo '  exit 1' >> /entrypoint.sh && \
    echo 'fi' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Configure Vault' >> /entrypoint.sh && \
    echo 'export VAULT_ADDR' >> /entrypoint.sh && \
    echo 'export VAULT_TOKEN' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Verifying assets..."' >> /entrypoint.sh && \
    echo 'ls -lh /var/lib/matchbox/assets' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Fetching groups..."' >> /entrypoint.sh && \
    echo 'echo "Downloading group: cp1.json"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/groups/cp1.json "${GITHUB_REPO}/raw/main/matchbox/groups/cp1.json"' >> /entrypoint.sh && \
    echo 'echo "Downloading group: cp2.json"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/groups/cp2.json "${GITHUB_REPO}/raw/main/matchbox/groups/cp2.json"' >> /entrypoint.sh && \
    echo 'echo "Downloading group: cp3.json"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/groups/cp3.json "${GITHUB_REPO}/raw/main/matchbox/groups/cp3.json"' >> /entrypoint.sh && \
    echo 'echo "Downloading group: worker1.json"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/groups/worker1.json "${GITHUB_REPO}/raw/main/matchbox/groups/worker1.json"' >> /entrypoint.sh && \
    echo 'echo "Downloading group: worker2.json"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/groups/worker2.json "${GITHUB_REPO}/raw/main/matchbox/groups/worker2.json"' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Fetching Talos config templates..."' >> /entrypoint.sh && \
    echo 'echo "Downloading template: controlplane.yaml.template"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/assets/controlplane.yaml.template "${GITHUB_REPO}/raw/main/configs/controlplane.yaml.template"' >> /entrypoint.sh && \
    echo 'echo "Downloading template: worker.yaml.template"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/assets/worker.yaml.template "${GITHUB_REPO}/raw/main/configs/worker.yaml.template"' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Fetching profiles..."' >> /entrypoint.sh && \
    echo 'echo "Downloading profile: control-plane.json"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/profiles/control-plane.json "${GITHUB_REPO}/raw/main/matchbox/profiles/control-plane.json"' >> /entrypoint.sh && \
    echo 'echo "Downloading profile: worker.json"' >> /entrypoint.sh && \
    echo 'curl -fSL -o /var/lib/matchbox/profiles/worker.json "${GITHUB_REPO}/raw/main/matchbox/profiles/worker.json"' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Get machine token from vault and add to metadata' >> /entrypoint.sh && \
    echo 'machine_token=$(vault read -format=json secret/data/talos/cluster | jq -r .data.data.machine_token)' >> /entrypoint.sh && \
    echo 'for group in /var/lib/matchbox/groups/*.json; do' >> /entrypoint.sh && \
    echo '  jq --arg token "$machine_token" '\''.metadata.machine_token = $token'\'' "$group" > "$group.tmp" && mv "$group.tmp" "$group"' >> /entrypoint.sh && \
    echo 'done' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'exec /matchbox -address=0.0.0.0:8080 "$@"' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
