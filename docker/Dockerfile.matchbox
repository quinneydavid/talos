FROM alpine:latest

# Install required packages
RUN apk add --no-cache curl jq ca-certificates iputils openssl wget

# Install yq from binary since apk package is not available
RUN wget https://github.com/mikefarah/yq/releases/download/v4.35.1/yq_linux_amd64 -O /usr/bin/yq && \
    chmod +x /usr/bin/yq

# Update CA certificates
RUN update-ca-certificates

# Create required directories
RUN mkdir -p /var/lib/matchbox/assets \
    /var/lib/matchbox/profiles \
    /var/lib/matchbox/groups \
    /var/lib/matchbox/configs \
    /configs \
    /scripts && \
    chmod -R 755 /var/lib/matchbox

# Copy local files
COPY scripts/generate-configs.sh /scripts/
COPY configs/kube-vip.yaml /var/lib/matchbox/configs/
RUN chmod +x /scripts/generate-configs.sh

# Create entrypoint script
RUN echo '#!/bin/sh' > /entrypoint.sh && \
    echo 'set -e' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Start matchbox server in background' >> /entrypoint.sh && \
    echo '/matchbox -address=0.0.0.0:8080 -data-path=/var/lib/matchbox -assets-path=/var/lib/matchbox/assets &' >> /entrypoint.sh && \
    echo 'MATCHBOX_PID=$!' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Download Talos assets' >> /entrypoint.sh && \
    echo 'TALOS_VERSION=${TALOS_VERSION:-latest}' >> /entrypoint.sh && \
    echo 'if [ "${TALOS_VERSION}" = "latest" ]; then' >> /entrypoint.sh && \
    echo '    TALOS_VERSION=$(curl -sf https://api.github.com/repos/siderolabs/talos/releases/latest | jq -r .tag_name)' >> /entrypoint.sh && \
    echo 'fi' >> /entrypoint.sh && \
    echo 'echo "Using version: ${TALOS_VERSION}"' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Download Talos assets' >> /entrypoint.sh && \
    echo 'echo "Downloading vmlinuz..."' >> /entrypoint.sh && \
    echo 'curl -fSL --progress-bar --retry 3 --retry-delay 3 -H "Accept: application/octet-stream" -o /var/lib/matchbox/assets/vmlinuz "https://github.com/siderolabs/talos/releases/download/${TALOS_VERSION}/vmlinuz-amd64"' >> /entrypoint.sh && \
    echo 'echo "Downloading initramfs.xz..."' >> /entrypoint.sh && \
    echo 'curl -fSL --progress-bar --retry 3 --retry-delay 3 -H "Accept: application/octet-stream" -o /var/lib/matchbox/assets/initramfs.xz "https://github.com/siderolabs/talos/releases/download/${TALOS_VERSION}/initramfs-amd64.xz"' >> /entrypoint.sh && \
    echo 'echo "Downloading talosctl..."' >> /entrypoint.sh && \
    echo 'curl -fSL --progress-bar --retry 3 --retry-delay 3 -H "Accept: application/octet-stream" -o /usr/local/bin/talosctl "https://github.com/siderolabs/talos/releases/download/${TALOS_VERSION}/talosctl-linux-amd64"' >> /entrypoint.sh && \
    echo 'chmod +x /usr/local/bin/talosctl' >> /entrypoint.sh && \
    echo 'echo "${TALOS_VERSION}" > /var/lib/matchbox/assets/version.txt' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Verify required environment variables' >> /entrypoint.sh && \
    echo 'if [ -z "$GITHUB_REPO" ]; then' >> /entrypoint.sh && \
    echo '  echo "GITHUB_REPO environment variable must be set"' >> /entrypoint.sh && \
    echo '  exit 1' >> /entrypoint.sh && \
    echo 'fi' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Download network config from GitHub' >> /entrypoint.sh && \
    echo 'echo "Downloading network config..."' >> /entrypoint.sh && \
    echo 'curl -fSL --retry 3 --retry-delay 3 -o /var/lib/matchbox/network-config.yaml "${GITHUB_REPO}/raw/main/configs/network-config.yaml"' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Generate Talos configurations' >> /entrypoint.sh && \
    echo 'echo "Generating Talos configurations..."' >> /entrypoint.sh && \
    echo '/scripts/generate-configs.sh' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Create ready file for TFTP server' >> /entrypoint.sh && \
    echo 'touch /var/lib/matchbox/assets/.ready' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Wait for matchbox to exit' >> /entrypoint.sh && \
    echo 'wait $MATCHBOX_PID' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Install matchbox binary
RUN curl -LO --retry 3 --retry-delay 3 https://github.com/poseidon/matchbox/releases/download/v0.10.0/matchbox-v0.10.0-linux-amd64.tar.gz && \
    tar xzf matchbox-v0.10.0-linux-amd64.tar.gz && \
    mv matchbox-v0.10.0-linux-amd64/matchbox /matchbox && \
    rm -rf matchbox-v0.10.0-linux-amd64* && \
    chmod +x /matchbox

# Create data volume
VOLUME /var/lib/matchbox

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

EXPOSE 8080

ENTRYPOINT ["/entrypoint.sh"]
