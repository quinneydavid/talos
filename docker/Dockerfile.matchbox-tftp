FROM alpine:latest

RUN apk add --no-cache dnsmasq syslinux yq curl

# Create required directories
RUN mkdir -p /var/lib/tftpboot/pxelinux.cfg /configs

# Copy necessary PXE boot files
RUN cp /usr/share/syslinux/lpxelinux.0 /var/lib/tftpboot/ && \
    cp /usr/share/syslinux/ldlinux.c32 /var/lib/tftpboot/

# Configure dnsmasq for TFTP
RUN printf 'enable-tftp\n\
tftp-root=/var/lib/tftpboot\n\
dhcp-boot=lpxelinux.0\n\
log-queries\n' > /etc/dnsmasq.conf

# Create entrypoint script that will generate PXE configs
RUN echo '#!/bin/sh' > /entrypoint.sh && \
    echo 'set -e' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Starting TFTP server setup..."' >> /entrypoint.sh && \
    echo 'echo "Waiting for Talos files to be available..."' >> /entrypoint.sh && \
    echo 'until [ -f /var/lib/matchbox/assets/.ready ]; do' >> /entrypoint.sh && \
    echo '  sleep 1' >> /entrypoint.sh && \
    echo 'done' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Copying Talos files..."' >> /entrypoint.sh && \
    echo 'cp /var/lib/matchbox/assets/vmlinuz /var/lib/tftpboot/' >> /entrypoint.sh && \
    echo 'cp /var/lib/matchbox/assets/initramfs.xz /var/lib/tftpboot/' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Waiting for network config to be available..."' >> /entrypoint.sh && \
    echo 'until [ -f /var/lib/matchbox/network-config.yaml ]; do' >> /entrypoint.sh && \
    echo '  sleep 1' >> /entrypoint.sh && \
    echo 'done' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Creating PXE configs..."' >> /entrypoint.sh && \
    echo 'cp /var/lib/matchbox/network-config.yaml /configs/' >> /entrypoint.sh && \
    echo 'for node in $(yq e ".nodes | keys | .[]" /configs/network-config.yaml); do' >> /entrypoint.sh && \
    echo '  mac=$(yq e ".nodes.${node}.mac" /configs/network-config.yaml)' >> /entrypoint.sh && \
    echo '  type=$(yq e ".nodes.${node}.type" /configs/network-config.yaml)' >> /entrypoint.sh && \
    echo '  mac_dashes=$(echo $mac | tr ":" "-")' >> /entrypoint.sh && \
    echo '  if [ "$type" = "controlplane" ]; then' >> /entrypoint.sh && \
    echo '    config_path="controlplane-${node}.yaml"' >> /entrypoint.sh && \
    echo '  else' >> /entrypoint.sh && \
    echo '    config_path="worker-${node}.yaml"' >> /entrypoint.sh && \
    echo '  fi' >> /entrypoint.sh && \
    echo '  cat > "/var/lib/tftpboot/pxelinux.cfg/01-${mac_dashes}" << EOF' >> /entrypoint.sh && \
    echo 'DEFAULT talos' >> /entrypoint.sh && \
    echo 'LABEL talos' >> /entrypoint.sh && \
    echo '    KERNEL vmlinuz' >> /entrypoint.sh && \
    echo '    APPEND initrd=initramfs.xz init_on_alloc=1 init_on_free=1 slab_nomerge pti=on console=tty0 console=ttyS0 printk.devkmsg=on talos.platform=metal talos.config=http://matchbox.lan:8080/assets/${config_path}' >> /entrypoint.sh && \
    echo 'EOF' >> /entrypoint.sh && \
    echo 'done' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Create default PXE config' >> /entrypoint.sh && \
    echo 'cat > "/var/lib/tftpboot/pxelinux.cfg/default" << EOF' >> /entrypoint.sh && \
    echo 'DEFAULT talos' >> /entrypoint.sh && \
    echo 'LABEL talos' >> /entrypoint.sh && \
    echo '    KERNEL vmlinuz' >> /entrypoint.sh && \
    echo '    APPEND initrd=initramfs.xz init_on_alloc=1 init_on_free=1 slab_nomerge pti=on console=tty0 console=ttyS0 printk.devkmsg=on talos.platform=metal' >> /entrypoint.sh && \
    echo 'EOF' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo 'echo "Starting dnsmasq..."' >> /entrypoint.sh && \
    echo 'exec dnsmasq -d' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

EXPOSE 69/udp

ENTRYPOINT ["/entrypoint.sh"]
